# Напишите программу, которая будет для переданного натурального числа возвращать в текстовом виде числительное наименование

vocs = [
	{1: 'один', 2: 'два', 3: 'три', 4: 'четыре', 5: 'пять', 6: 'шесть', 
	 7: 'семь', 8: 'восемь', 9: 'девять', 0: ''},
	{0:'', 10: 'десять', 20: 'двадцать', 30: 'тридцать', 40: 'сорок', 50: 'пятьдесят', 
	 60: 'шестьдесят', 70: 'семьдесят', 80: 'восемьдесят', 90: 'девяносто'},
	{100: 'сто', 200: 'двести', 300: 'триста', 400: 'четыреста', 500: 'пятьсот', 
	 600: 'шестьсот', 700: 'семьсот', 800: 'восемьсот', 900: 'девятьсот'}
]
exceptions = {11: 'одинадцать', 12: 'двенадцать', 13: 'тринадцать', 14: 'четырнадцать',
			15: 'пятнадцать', 16: 'шестнадцать', 17: 'семнадцать', 18: 'восемнадцать',
			19: 'девятнадцать'}


while s := input():
	num = int(s)
	flag = False
	
	# формирование списка [единицы, десятки, сотни]
	# 138 -> [8, 30, 100]
	l = []
	for i in range(len(s)):
		l += [ (num % 10**(i+1)) // 10**i * 10**i ]
	# то же самое списочным выражением
	# l = [(num % 10**(i+1)) // 10**i * 10**i for i in range(len(s)-1, -1, -1)]
	
	res = []
	# проверка на попадние в исключения
	if 10 < l[0] + l[1] < 20:
		res = [ exceptions[l[0] + l[1]] ]
		flag = True
	# если попали в исключения, то необходимо добавить слово для сотен, если они есть
	# если нет — проходим по всем элементам списка
	r = range(len(l)) if not flag else range(2, len(l))
	# индекс в списке l равен индексу нужного словаря в списке vocs
	for i in r:
		res += [ vocs[i][ l[i] ] ]
	
	print(*res[::-1])
